/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__frame_frame__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__business_home__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__business_course__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__business_course___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__business_course__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__business_works__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__business_works___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__business_works__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__business_about__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__business_about___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__business_about__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__business_team__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__business_team___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__business_team__);
/* eslint-disable */
// import "@babel/polyfill"






console.log('aaaa');
window.onload = function () {
  Object(__WEBPACK_IMPORTED_MODULE_0__frame_frame__["a" /* default */])();
  Object(__WEBPACK_IMPORTED_MODULE_1__business_home__["a" /* default */])();
}


/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/*eslint-disable */

/* harmony default export */ __webpack_exports__["a"] = (function () {
  //头部交互
  var arrow = document.querySelector(".arrow");
  //li元素
  var headLiNodes = document.querySelectorAll(".headerNav .list li");
  //上层元素
  var coverNodes = document.querySelectorAll(".headerNav .list .cover");
  var content = document.querySelector(".content");
  var mainList = document.querySelector(".mainList");
  var contentLiNodes = document.querySelectorAll(".content .mainList li");
  var pointLiNodes = document.querySelectorAll(".content .points li");

  //箭头初始位置
  arrow.style.left = headLiNodes[0].offsetLeft + headLiNodes[0].offsetWidth / 2 - arrow.offsetWidth / 2 + "px";
  //设置content每个li高度
  contentLiNodes.forEach((item) => {
    item.style.height = content.offsetHeight + "px";
  });
  //遍历headLiNodes绑定点击事件
  headLiNodes.forEach((item, index) => {
    item.onclick =  ()=> {
      move(index);
    }
  });
  //遍历pointLiNodes绑定点击事件
  pointLiNodes.forEach((item, index) => {
    item.onclick =  ()=> {
      move(index);
    }
  });
  // content监听滚轮事件
  // chrome ie
  content.index = 0;
  var timer=null;
  content.onmousewheel =  (event)=> {
    clearTimeout(timer);
    timer = setTimeout(()=>{
      scrollFn(event,content.index)
    },500)
  };
  // firefox
  content.addEventListener('DOMMouseScroll',  (event)=> {
    clearTimeout(timer);
    timer = setTimeout(()=>{
      scrollFn(event,content.index)
    },500)

  });
//封装滚轮callback
  function scrollFn(event,index) {
    //定义变量记录滚动方向
    var dir = '';
    if (event.wheelDelta) {
      // ie chrome
      if (event.wheelDelta > 0) {
        dir = 'up';
      } else {
        dir = 'down';
      }
    } else if (event.detail) {
      // firefox
      if (event.detail < 0) {
        dir = 'up';
      } else {
        dir = 'down';
      }
    }

    if (dir === 'up') {
      index > 0 ? index-- : 0;
      move(index)
    } else if (dir === 'down') {
      index < (pointLiNodes.length-1) ? index++ :(pointLiNodes.length-1) ;
      move(index)
    }
    content.index = index;
  }

  //封装move事件
  function move(index) {
    //cover层排他
    justSelf(coverNodes,index);
    //小圆点排他
    justSelf(pointLiNodes,index);
    //箭头move
    arrow.style.left = headLiNodes[index].offsetLeft + headLiNodes[index].offsetWidth / 2 - arrow.offsetWidth / 2 + "px";
    //切换每一屏
    mainList.style.top = -index * content.offsetHeight + "px";
  }
  //封装排他
  function justSelf(Nodes,index){
    Nodes.forEach((item) => {
      item.classList.remove("active");
    });
    Nodes[index].classList.add("active");
  }




});




/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/*eslint-disable */
/* harmony default export */ __webpack_exports__["a"] = (function () {

});


/***/ }),
/* 3 */
/***/ (function(module, exports) {



/***/ }),
/* 4 */
/***/ (function(module, exports) {



/***/ }),
/* 5 */
/***/ (function(module, exports) {



/***/ }),
/* 6 */
/***/ (function(module, exports) {



/***/ })
/******/ ]);
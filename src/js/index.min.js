/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 2);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/*eslint-disable */

/* harmony default export */ __webpack_exports__["a"] = (function (Nodes, index) {
  Nodes.forEach((item) => {
    item.classList.remove("active");
  });
  Nodes[index].classList.add("active");
});


/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* eslint-disable */
var bannerList = document.querySelector(".bannerList");
var bannerPoints = document.querySelector(".bannerPoints");
var plane1 =document.querySelector(".plane1");
var plane2 =document.querySelector(".plane2");
var plane3 =document.querySelector(".plane3");
var pencel1 =document.querySelector(".pencel1");
var pencel2 =document.querySelector(".pencel2");
var pencel3 =document.querySelector(".pencel3");
var about3 =document.querySelector(".about3");
var about4 =document.querySelector(".about4");

var team1 =document.querySelector(".team1");
var team2 =document.querySelector(".team2");




/* harmony default export */ __webpack_exports__["a"] = ([
  //1 home
  {showinFn:function () {
      bannerList.style.transform="translateY(0px)";
      bannerList.style.opacity=1;
      bannerPoints.style.transform="translateY(0px)";
      bannerPoints.style.opacity=1;
    },
    showoutFn:function () {
      bannerList.style.opacity=0;
      bannerList.style.transform="translateY(-250px)";
      bannerPoints.style.transform="translateY(250px)";
      bannerPoints.style.opacity=0;
    }
    },
  //2 course
  {showinFn:function () {
      plane1.style.transform = "translate(100px,100px)";
      plane2.style.transform = "translate(100px,-100px)";
      plane3.style.transform = "translate(-80px,40px)";
    },
    showoutFn:function () {
      plane1.style.transform = "translate(0px,0px)";
      plane2.style.transform = "translate(0px,0px)";
      plane3.style.transform = "translate(0px,0px)";
    }
  },
  //3 works
  {showinFn:function () {
      pencel1.style.transform = "translateY(50px)"
      pencel2.style.transform = "translateY(-50px)"
      pencel3.style.transform = "translateY(-50px)"
    },
    showoutFn:function () {
      pencel1.style.transform = "translateY(0px)";
      pencel2.style.transform = "translateY(0px)";
      pencel3.style.transform = "translateY(0px)";
    }
  },
  //4 about
  {showinFn:function () {
      about3.style.transform="rotate(0deg)";
      about4.style.transform="rotate(0deg)";
    },
    showoutFn:function () {
      about3.style.transform="rotate(-45deg)";
      about4.style.transform="rotate(45deg)";
    }
  },
  //5 team
  {showinFn:function () {
      team1.style.transform="translateX(0px)";
      team2.style.transform="translateX(0px)"
    },
    showoutFn:function () {
      team1.style.transform="translateX(-100px)";
      team2.style.transform="translateX(100px)";
    }
  },
]);


/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__openShow_openShow__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__frame_frame__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__business_course__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__business_works__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__business_about__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__business_team__ = __webpack_require__(9);
/* eslint-disable */
// import "@babel/polyfill"






window.onload=function(){
  Object(__WEBPACK_IMPORTED_MODULE_0__openShow_openShow__["a" /* default */])();
  Object(__WEBPACK_IMPORTED_MODULE_1__frame_frame__["a" /* default */])();
  Object(__WEBPACK_IMPORTED_MODULE_3__business_works__["a" /* default */])();
  Object(__WEBPACK_IMPORTED_MODULE_2__business_course__["a" /* default */])();
  Object(__WEBPACK_IMPORTED_MODULE_4__business_about__["a" /* default */])();
  Object(__WEBPACK_IMPORTED_MODULE_5__business_team__["a" /* default */])();
};


window.onresize=function () {//监听屏幕重置
  var arrow = document.querySelector(".arrow");
  //li元素
  var headLiNodes = document.querySelectorAll(".headerNav .list>li");
  //上层元素
  var coverNodes = document.querySelectorAll(".headerNav .list .cover");
  var content = document.querySelector(".content");
  var mainList = document.querySelector(".mainList");
  var contentLiNodes = document.querySelectorAll(".content .mainList>li");
  var pointLiNodes = document.querySelectorAll(".content .points>li");
  //箭头初始位置
  arrow.style.left = headLiNodes[0].offsetLeft + headLiNodes[0].offsetWidth / 2 - arrow.offsetWidth / 2 + "px";
  //设置content每个li高度
  contentLiNodes.forEach((item) => {
    item.style.height = content.offsetHeight + "px";
  });

};


/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__business_home__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__everyPageShow_everyPageShow__ = __webpack_require__(1);
/* eslint-disable */


/* harmony default export */ __webpack_exports__["a"] = (function () {
  var coverNode = document.querySelector("#wrap>.cover");
  var topNode = coverNode.querySelector(".top");
  var lineNode = coverNode.querySelector(".line");
  var downNode = coverNode.querySelector(".down");

  setTimeout(() => {
    lineNode.style.width = "100%"
  }, 2000);

  lineNode.addEventListener("transitionend", function () {
    //去掉白线
    this.remove();
    topNode.style.height = 0;
    downNode.style.height = 0;
  });

  topNode.addEventListener("transitionend", function () {
    //去掉遮罩层
    coverNode.remove();
    __WEBPACK_IMPORTED_MODULE_1__everyPageShow_everyPageShow__["a" /* default */][0].showinFn();
    Object(__WEBPACK_IMPORTED_MODULE_0__business_home__["a" /* default */])();
  })

});


/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__justSelf_justSelf__ = __webpack_require__(0);
/*eslint-disable */


/* harmony default export */ __webpack_exports__["a"] = (function () {

    var content = document.querySelector("#wrap .content");
    var bannerList = document.querySelector(".bannerList");
    var bannerListNodes = bannerList.querySelectorAll("li");
    var bannerPoints = document.querySelector(".bannerPoints");
    var bannerPointsNodes = bannerPoints.querySelectorAll("li");
    var oldIndex = 0;
    var autoIndex = 0;
    var timer = 0;
    //自动播放
    autoPlay();
    //移出自动播放
    content.onmouseleave = () => {
      //自动播放
      autoPlay();
    };
    //移入停止
    content.onmouseenter=()=>{
      clearInterval(timer);
    };

    //点击小圆点
    bannerPointsNodes.forEach((item, index) => {
      item.index = index;
      item.onclick = function () {
        clearInterval(timer);
        //排他
        Object(__WEBPACK_IMPORTED_MODULE_0__justSelf_justSelf__["a" /* default */])(bannerPointsNodes, index);
        //move
        if (oldIndex === this.index) {
          return;
        }
        clearClass(bannerListNodes[this.index]);
        clearClass(bannerListNodes[oldIndex]);
        if (oldIndex < this.index) {//点击右边
          bannerListNodes[oldIndex].classList.add("leftHide");
          bannerListNodes[this.index].classList.add("rightShow");
        }
        if (oldIndex > this.index) {//点击左边
          bannerListNodes[oldIndex].classList.add("rightHide");
          bannerListNodes[this.index].classList.add("leftShow");
        }
        oldIndex = this.index;
        autoIndex = this.index;
      };

    });
    //封装autoplay
    function autoPlay(){
      clearInterval(timer);
      timer = setInterval(() => {
        autoIndex++;
        if (autoIndex > bannerListNodes.length - 1) {
          autoIndex = 0;
        }
        clearClass(bannerListNodes[autoIndex]);
        clearClass(bannerListNodes[oldIndex]);
        bannerListNodes[oldIndex].classList.add("leftHide");
        bannerListNodes[autoIndex].classList.add("rightShow");
        oldIndex = autoIndex;
        //排他
        Object(__WEBPACK_IMPORTED_MODULE_0__justSelf_justSelf__["a" /* default */])(bannerPointsNodes, autoIndex);
      }, 3000);
    }

    //封装清除类
    function clearClass(node) {
      node.classList.remove("leftHide");
      node.classList.remove("rightShow");
      node.classList.remove("rightHide");
      node.classList.remove("leftShow");
    }


});


/***/ }),
/* 5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__justSelf_justSelf__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__everyPageShow_everyPageShow__ = __webpack_require__(1);
/*eslint-disable */


/* harmony default export */ __webpack_exports__["a"] = (function () {

  //头部交互
  var arrow = document.querySelector(".arrow");
  //li元素
  var headLiNodes = document.querySelectorAll(".headerNav .list>li");
  //上层元素
  var coverNodes = document.querySelectorAll(".headerNav .list .cover");
  var content = document.querySelector(".content");
  var mainList = document.querySelector(".mainList");
  var contentLiNodes = document.querySelectorAll(".content .mainList>li");
  var pointLiNodes = document.querySelectorAll(".content .points>li");
  var preIndex=0;
  //箭头初始位置
  arrow.style.left = headLiNodes[0].offsetLeft + headLiNodes[0].offsetWidth / 2 - arrow.offsetWidth / 2 + "px";
  //设置content每个li高度
  contentLiNodes.forEach((item) => {
    item.style.height = content.offsetHeight + "px";
  });
  //遍历headLiNodes绑定点击事件
  headLiNodes.forEach((item, index) => {
    item.onclick = () => {
      move(index);

    }
  });
  //遍历pointLiNodes绑定点击事件
  pointLiNodes.forEach((item, index) => {
    item.onclick = () => {
      move(index);

    }
  });
  // content监听滚轮事件
  content.index = 0;
  var timer = null;
  // chrome ie
  content.onmousewheel = (event) => {
    clearTimeout(timer);
    timer = setTimeout(() => {
      scrollFn(event, content.index)
    }, 500)
  };
  // firefox
  content.addEventListener('DOMMouseScroll', (event) => {
    clearTimeout(timer);
    timer = setTimeout(() => {
      scrollFn(event, content.index)
    }, 500)

  });

//封装滚轮callback
  function scrollFn(event, index) {
    //定义变量记录滚动方向
    var dir = '';
    if (event.wheelDelta) {
      // ie chrome
      if (event.wheelDelta > 0) {
        dir = 'up';
      } else {
        dir = 'down';
      }
    } else if (event.detail) {
      // firefox
      if (event.detail < 0) {
        dir = 'up';
      } else {
        dir = 'down';
      }
    }

    if (dir === 'up') {
      index > 0 ? index-- : 0;
      move(index)
    } else if (dir === 'down') {
      index < (pointLiNodes.length - 1) ? index++ : (pointLiNodes.length - 1);
      move(index)
    }
  }

  //封装move事件
  function move(index) {
    __WEBPACK_IMPORTED_MODULE_1__everyPageShow_everyPageShow__["a" /* default */][index].showinFn();
    __WEBPACK_IMPORTED_MODULE_1__everyPageShow_everyPageShow__["a" /* default */][preIndex].showoutFn();
    content.index = index;
    //cover层排他
    Object(__WEBPACK_IMPORTED_MODULE_0__justSelf_justSelf__["a" /* default */])(coverNodes,index);

    //小圆点排他
    Object(__WEBPACK_IMPORTED_MODULE_0__justSelf_justSelf__["a" /* default */])(pointLiNodes,index);
    //箭头move
    arrow.style.left = headLiNodes[index].offsetLeft + headLiNodes[index].offsetWidth / 2 - arrow.offsetWidth / 2 + "px";
    //切换每一屏
    mainList.style.top = -index * content.offsetHeight + "px";

    preIndex=index;
  }


});




/***/ }),
/* 6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/*eslint-disable */
/* harmony default export */ __webpack_exports__["a"] = (function () {

});


/***/ }),
/* 7 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/*eslint-disable */
/* harmony default export */ __webpack_exports__["a"] = (function () {

});


/***/ }),
/* 8 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/*eslint-disable */
/* harmony default export */ __webpack_exports__["a"] = (function () {

  var spiderList = document.querySelectorAll(".spider>ul");
  var w = spiderList[0].offsetWidth/2;
  var h = spiderList[0].offsetHeight/2;

  spiderList.forEach((item) => {
    //循环设置li&img 及初始样式
    for (var i = 0; i < 4; i++) {
      var liNode = document.createElement("li");
      var imgNode = document.createElement("img");
      //设置li宽高
      liNode.style.width = w + "px";
      liNode.style.height = h + "px";
      imgNode.style.left=  -i%2*w +"px";
      imgNode.style.top=     -Math.floor(i/2)*h +"px";
      imgNode.src = item.dataset.src;
      liNode.appendChild(imgNode);
      item.appendChild(liNode);
      //img 初始位置
      /* i     left     top
      * 0         0         0
      * 1         -w        0
      * 2        0          -h
      * 3         -w       -h
      * 规律    -i%2*w       -Math.floor(i/2)*h
      * */
    }
  });

var spiders=document.querySelectorAll(".spider");
  spiders.forEach((item)=>{
    //鼠标移入
    item.onmouseenter=function () {
      var imgNodes=this.querySelectorAll("ul>li>img");
      //img
      /* i     left          top
      * 0         0 => 0          0=>h
      * 1         -w => -2w      0=>0
      * 2          0 => w        -h=>-h
      * 3         -w =>-w              -h=>-2h
      * */
      imgNodes.forEach((item,index)=>{
        switch (index){
          case 0:
            item.style.top = h+"px";
            break;
          case 1:
            item.style.left = -2*w+"px";
            break;
          case 2:
            item.style.left = w+"px";
            break;
          case 3:
            item.style.top = -2*h+"px";
            break;
        }
      })


    };
    //鼠标移出
    item.onmouseleave=function () {
      var imgNodes=this.querySelectorAll("ul>li>img");
      //img
      /* i     left          top
      * 0         0 => 0          0=>h
      * 1         -w => -2w      0=>0
      * 2          0 => w        -h=>-h
      * 3         -w =>-w              -h=>-2h
      * */
      imgNodes.forEach((item,index)=>{
        switch (index){
          case 0:
            item.style.top = 0;
            break;
          case 1:
            item.style.left = -w+"px";
            break;
          case 2:
            item.style.left = 0;
            break;
          case 3:
            item.style.top = -h+"px";
            break;
        }
      })
    };
  })



});


/***/ }),
/* 9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__bubble_bubble__ = __webpack_require__(10);
/*eslint-disable */


/* harmony default export */ __webpack_exports__["a"] = (function () {

  var teamListNodes = document.querySelectorAll(".team3>ul>li");
  var oc = document.querySelector("canvas");
  var w = teamListNodes[0].offsetWidth;
  var h = teamListNodes[0].offsetHeight;
  oc.width = w ;
  oc.height = h;

//
  teamListNodes.forEach((item, index) => {
    item.style.backgroundPositionX = -w * index + "px";

    item.onmouseenter = function() {
      //排他
      teamListNodes.forEach((item) => {
        item.style.opacity = 0.5;
      });
      this.style.opacity = 1;

      //
      oc.style.display = "block";
      oc.style.left = this.offsetLeft+ "px";
      __WEBPACK_IMPORTED_MODULE_0__bubble_bubble__["a" /* default */].bubbleFn(oc);
    };

  });
  //oc 定位在li之上
  oc.onmouseleave=function () {
    this.style.display="none";
    teamListNodes.forEach((item) => {
      item.style.opacity = 1;
    });
  }


});


/***/ }),
/* 10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/*eslint-disable */
var intervalTimer = {
  timer1:0,
  timer2:0
};
/* harmony default export */ __webpack_exports__["a"] = ({
  intervalTimer,
  bubbleFn:function (oc) {
    clearInterval(intervalTimer.timer1);
    clearInterval(intervalTimer.timer2);

    var arr = [];
    var ctx = oc.getContext("2d");
    //提供圆信息
    intervalTimer.timer1=setInterval(() => {
      //半径   4-6之间
      var radius = Math.round(Math.random() * 6) + 4;
      //初始x坐标
      var x = Math.round(Math.random() * (oc.width - 2 * radius)) + radius;
      var startX = x;
      //初始y坐标
      var y = oc.height - radius;
      var startY = y;
      var r = Math.round(Math.random() * 255);
      var g = Math.round(Math.random() * 255);
      var b = Math.round(Math.random() * 255);
      var a = 1;

      var deg = 0;
      //随机幅度
      var stepX = Math.round(Math.random() * 40) + 10;
      var stepY = Math.round(Math.random() * 40) + 10;
      arr.push({x, startX, y, startY, radius, r, g, b, a, stepX, stepY, deg})
    }, 500);


    //画圆
    intervalTimer.timer2=setInterval(() => {
      ctx.clearRect(0, 0, oc.width, oc.height);

      //动画&限制数组
      arr.forEach((item, index) => {
        item.deg += 5;
        item.x = item.startX - Math.sin(item.deg * Math.PI / 180) * item.stepX;
        item.y = item.startY - item.deg * Math.PI / 180 * item.stepY;
        if (item.y < -item.radius) {
          arr.splice(index, 1)
        }
      });
      arr.forEach((item) => {
        ctx.save();
        ctx.beginPath();
        ctx.fillStyle = `rgba(${item.r},${item.g},${item.b},${item.a})`;
        ctx.arc(item.x, item.y, item.radius, 0, 2 * Math.PI);
        ctx.fill();
        ctx.restore();
      })
    }, 1000 / 60)
  }
});


/***/ })
/******/ ]);